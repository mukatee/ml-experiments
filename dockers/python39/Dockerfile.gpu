FROM tensorflow/tensorflow:latest-gpu

ENV	TZ=Europe/Helsinki \
	OpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so \
	OpenCL_INCLUDE_DIR=/usr/local/cuda/include \
	PYTHONPATH=/usr/lib/python3.8/site-packages

RUN	ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone &&\
	apt update -y; apt install software-properties-common; add-apt-repository ppa:deadsnakes/ppa &&\
#	apt install python3.9 -y &&\
#	rm -f /usr/local/bin/python && ln -s /usr/bin/python3.9 /usr/local/bin/python &&\
#	apt install python3.9-distutils -y &&\
	apt install -y --no-install-recommends git cmake build-essential libboost-dev libboost-system-dev libboost-filesystem-dev

RUN python -m pip install --upgrade setuptools pip pipenv

#RUN python3.9 -m pip install pipenv jupyter matplotlib hyperopt optuna

ENV PROJECT_DIR /mystuff

RUN	mkdir ${PROJECT_DIR} &&\
	mkdir ${PROJECT_DIR}/lgbm-build && \
	mkdir -p /etc/OpenCL/vendors && \
	echo "/usr/lib/x86_64-linux-gnu/libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

WORKDIR ${PROJECT_DIR}

COPY Pipfile Pipfile.lock jupyter_start.sh lgbm_build.sh ${PROJECT_DIR}/

RUN python3 -m pipenv install --system --deploy

WORKDIR ${PROJECT_DIR}/lgbm-build

RUN git clone --recursive https://github.com/microsoft/LightGBM &&\
	cd LightGBM &&\
	mkdir build &&\
	cd build &&\
	cmake -DUSE_GPU=1 -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ .. &&\
	make -j$(nproc) &&\
	cd .. &&\
	cd python-package/ &&\
#	python3 setup.py install --precompile &&\
	python setup.py install --precompile
#	python3 setup.py install --precompile

WORKDIR ${PROJECT_DIR}
